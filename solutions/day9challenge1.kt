/**
 * Rial Johnson
 * AOC Day 9 - Challenge 1
 */

fun main() {
    val input = "33\r\n18\r\n22\r\n44\r\n49\r\n15\r\n12\r\n38\r\n41\r\n46\r\n3\r\n42\r\n37\r\n19\r\n13\r\n7\r\n21\r\n29\r\n34\r\n40\r\n39\r\n35\r\n27\r\n25\r\n48\r\n87\r\n10\r\n16\r\n17\r\n45\r\n18\r\n30\r\n20\r\n22\r\n23\r\n73\r\n24\r\n26\r\n28\r\n53\r\n31\r\n37\r\n51\r\n32\r\n33\r\n34\r\n36\r\n35\r\n54\r\n27\r\n38\r\n39\r\n40\r\n74\r\n70\r\n41\r\n93\r\n144\r\n45\r\n63\r\n87\r\n66\r\n65\r\n55\r\n58\r\n62\r\n72\r\n105\r\n59\r\n76\r\n61\r\n67\r\n68\r\n77\r\n106\r\n78\r\n79\r\n183\r\n86\r\n117\r\n96\r\n100\r\n108\r\n104\r\n123\r\n113\r\n114\r\n116\r\n129\r\n119\r\n178\r\n120\r\n196\r\n126\r\n177\r\n184\r\n135\r\n182\r\n192\r\n201\r\n174\r\n360\r\n186\r\n190\r\n210\r\n248\r\n214\r\n282\r\n217\r\n227\r\n229\r\n304\r\n235\r\n370\r\n308\r\n261\r\n302\r\n300\r\n542\r\n376\r\n309\r\n317\r\n356\r\n364\r\n375\r\n407\r\n396\r\n400\r\n404\r\n585\r\n599\r\n514\r\n444\r\n907\r\n456\r\n633\r\n687\r\n496\r\n665\r\n561\r\n563\r\n832\r\n1056\r\n626\r\n673\r\n681\r\n720\r\n731\r\n840\r\n819\r\n796\r\n800\r\n1033\r\n1117\r\n900\r\n958\r\n940\r\n952\r\n1017\r\n1019\r\n1748\r\n1177\r\n1422\r\n1124\r\n1578\r\n1189\r\n1299\r\n1678\r\n1307\r\n1354\r\n2702\r\n2476\r\n1689\r\n3775\r\n1740\r\n2813\r\n2706\r\n1977\r\n1898\r\n1840\r\n2630\r\n2864\r\n1971\r\n2439\r\n2143\r\n2932\r\n2301\r\n2313\r\n2423\r\n2488\r\n2496\r\n3194\r\n2661\r\n2996\r\n3043\r\n4416\r\n3429\r\n3529\r\n3580\r\n3638\r\n3738\r\n3983\r\n4830\r\n3811\r\n4114\r\n4724\r\n5782\r\n4394\r\n4444\r\n7143\r\n6623\r\n6882\r\n7267\r\n5149\r\n7823\r\n5855\r\n5657\r\n5704\r\n6425\r\n7026\r\n6958\r\n9666\r\n7109\r\n7218\r\n10249\r\n8535\r\n7794\r\n11512\r\n14327\r\n9969\r\n15906\r\n8838\r\n10101\r\n9593\r\n12082\r\n10806\r\n10853\r\n13451\r\n17489\r\n13073\r\n11361\r\n12129\r\n17210\r\n13383\r\n13984\r\n30562\r\n16329\r\n14903\r\n15753\r\n19306\r\n16632\r\n23920\r\n26456\r\n26113\r\n18431\r\n27032\r\n19644\r\n27882\r\n20399\r\n37885\r\n21659\r\n27976\r\n24812\r\n23490\r\n24744\r\n25345\r\n25512\r\n42785\r\n27367\r\n29737\r\n30656\r\n45579\r\n31535\r\n32385\r\n35063\r\n52788\r\n38075\r\n38830\r\n44544\r\n40090\r\n40043\r\n55249\r\n57897\r\n42058\r\n45149\r\n52712\r\n48234\r\n48302\r\n72946\r\n50089\r\n64342\r\n52879\r\n103551\r\n57104\r\n72428\r\n62191\r\n79837\r\n63920\r\n71215\r\n73138\r\n80133\r\n84587\r\n82148\r\n156430\r\n90132\r\n152323\r\n113146\r\n90360\r\n197733\r\n100946\r\n105591\r\n101113\r\n98391\r\n288093\r\n154280\r\n109983\r\n204497\r\n164424\r\n152975\r\n137058\r\n126111\r\n191473\r\n181079\r\n144353\r\n153271\r\n170265\r\n166735\r\n183261\r\n180492\r\n188523\r\n236094\r\n235449\r\n188751\r\n202059\r\n262815\r\n305610\r\n199504\r\n208374\r\n247041\r\n312042\r\n254336\r\n440591\r\n353175\r\n442859\r\n263169\r\n270464\r\n616344\r\n297624\r\n311088\r\n320006\r\n402829\r\n377274\r\n363753\r\n369015\r\n501377\r\n388255\r\n390810\r\n397125\r\n401563\r\n407878\r\n446545\r\n455415\r\n471543\r\n732768\r\n524800\r\n751679\r\n1043856\r\n533633\r\n626922\r\n568088\r\n581552\r\n608712\r\n699343\r\n631094\r\n697280\r\n779065\r\n926958\r\n921925\r\n868668\r\n785380\r\n969651\r\n856978\r\n798688\r\n809441\r\n989430\r\n901960\r\n1036967\r\n996343\r\n1285312\r\n1133512\r\n1101721\r\n1195010\r\n1115185\r\n1149640\r\n1330437\r\n1911355\r\n1239806\r\n1328374\r\n1912577\r\n1476345\r\n3239729\r\n1654048\r\n1655666\r\n1594821\r\n1584068\r\n1608129\r\n1758938\r\n1700648\r\n1711401\r\n2365341\r\n1898303\r\n2895658\r\n2098064\r\n2216906\r\n4654596\r\n3293074\r\n2769233\r\n2354991\r\n3039775\r\n2834627\r\n3238116\r\n3810880\r\n3132011\r\n3060413\r\n3178889\r\n3284716\r\n3192197\r\n3202950\r\n3295469\r\n4253294\r\n3928307\r\n3412049\r\n4720332\r\n4993722\r\n4867297\r\n3996367\r\n4571897\r\n8152013\r\n4986139\r\n5124224\r\n5189618\r\n6472462\r\n5394766\r\n5874402\r\n5895040\r\n7003077\r\n6192424\r\n7385305\r\n8181601\r\n6476913\r\n6395147\r\n6487666\r\n8716699\r\n6707518\r\n7408416\r\n8398188\r\n7983946\r\n8568264\r\n8863664\r\n8982506\r\n9120591\r\n13184431\r\n10860541\r\n10110363\r\n10313842\r\n10584384\r\n11289806\r\n15470172\r\n11769442\r\n12382706\r\n16579789\r\n15056088\r\n12872060\r\n13896082\r\n12964579\r\n13102665\r\n25185888\r\n24474237\r\n14115934\r\n20633106\r\n16382134\r\n16552210\r\n23098440\r\n19092869\r\n18103097\r\n24209924\r\n24392471\r\n27842016\r\n24254385\r\n28687481\r\n24152148\r\n23059248\r\n38150467\r\n24641502\r\n25347285\r\n25836639\r\n42357482\r\n36023827\r\n26067244\r\n27080513\r\n35645079\r\n49033973\r\n30498068\r\n39463219\r\n42619454\r\n32934344\r\n34655307\r\n29221323\r\n37195966\r\n60665329\r\n62725592\r\n47313633\r\n50901264\r\n47211396\r\n82958712\r\n47700750\r\n48406533\r\n49988787\r\n50708746\r\n51183924\r\n51903883\r\n53147757\r\n88497192\r\n77789259\r\n56301836\r\n86546343\r\n67694034\r\n59719391\r\n70130310\r\n81340877\r\n101892670\r\n63876630\r\n66417289\r\n84407362\r\n96107283\r\n94525029\r\n146096070\r\n94912146\r\n95617929\r\n103087807\r\n101554290\r\n180025291\r\n103136544\r\n102612629\r\n110903315\r\n105051640\r\n109449593\r\n116021227\r\n120178466\r\n122719125\r\n178932391\r\n197661573\r\n123596021\r\n167971579\r\n130293919\r\n283113098\r\n199576669\r\n245349680\r\n199243827\r\n189437175\r\n213515944\r\n190530075\r\n196466436\r\n197172219\r\n233045614\r\n390106744\r\n223315010\r\n225331754\r\n207664269\r\n214501233\r\n396748888\r\n225470820\r\n291567600\r\n312156300\r\n478395294\r\n343809863\r\n253889940\r\n298265498\r\n509328519\r\n319731094\r\n472550273\r\n379967250\r\n385903611\r\n386609394\r\n479221694\r\n711440908\r\n545201914\r\n393638655\r\n629794502\r\n422165502\r\n439972053\r\n680214542\r\n461554209\r\n433135089\r\n468391173\r\n1024423608\r\n479360760\r\n545457540\r\n552155438\r\n854294784\r\n573621034\r\n617996592\r\n678232748\r\n705634705\r\n699698344\r\n938840569\r\n773605905\r\n772513005\r\n780248049\r\n815804157\r\n1170152030\r\n826773744\r\n855192864\r\n1418201329\r\n862137555\r\n1794033433\r\n1024818300\r\n894689298\r\n1051131681\r\n1163454132\r\n1031516198\r\n1052981794\r\n1119078574\r\n1125776472\r\n1191617626\r\n1450745753\r\n1485882754\r\n1377931092\r\n1405333049\r\n1472211349\r\n2266130803\r\n1546118910\r\n1552761054\r\n2576522225\r\n1642577901\r\n1717330419\r\n1681966608\r\n1749882162\r\n2300022347\r\n1886955855\r\n2216435926\r\n1919507598\r\n2242749307\r\n2084497992\r\n2150594772\r\n2157292670\r\n2172060368\r\n2244855046\r\n2317394098\r\n2569548718\r\n2891215803\r\n2783264141\r\n2850142441\r\n2877544398\r\n3762554836\r\n3098879964\r\n4533830024\r\n3195338955\r\n4384520339\r\n5066578367\r\n3399297027\r\n3568922463\r\n3636838017\r\n8170668041\r\n6514382415\r\n4373728596\r\n4467988870\r\n4322655140\r\n6446466861\r\n4307887442\r\n5674479944\r\n4416915414\r\n7406767406\r\n5100658239\r\n5352812859\r\n5978603096\r\n7105919281\r\n6498176991\r\n8669580702\r\n6294218919\r\n6735717981\r\n11048212439\r\n8021358356\r\n6968219490\r\n11573908151\r\n7036135044\r\n7205760480\r\n7944725459\r\n9423313379\r\n8630542582\r\n8790644010\r\n17868127070\r\n8724802856\r\n9408545681\r\n9982367386\r\n10453471098\r\n9517573653\r\n11079261335\r\n12792395910\r\n18253972919\r\n12272822015\r\n13400138200\r\n13233894972\r\n13029936900\r\n13262438409\r\n14912944949\r\n14004354534\r\n27677286298\r\n17188127866\r\n20436273244\r\n14241895524\r\n21790395668\r\n20502574714\r\n17421186592\r\n19499941039\r\n17515446866\r\n25912930722\r\n23687366070\r\n18926119334\r\n20435838484\r\n25672960215\r\n24109198235\r\n44865414164\r\n25065217925\r\n25302758915\r\n25506716987\r\n26263831872\r\n30683625001\r\n27034291434\r\n27504333933\r\n28246250058\r\n31192482400\r\n48104811593\r\n36921127631\r\n33168014858\r\n31663082116\r\n42486404517\r\n34936633458\r\n43188407081\r\n50683461724\r\n36441566200\r\n43991337259\r\n81786541795\r\n39361957818\r\n44545036719\r\n49174416160\r\n49411957150\r\n61876107401\r\n50367976840\r\n53549008973\r\n51770548859\r\n53298123306\r\n54538625367\r\n55280541492\r\n59909332174\r\n84348590608\r\n87706640225\r\n64831096974\r\n82346543840\r\n71025039934\r\n66599715574\r\n71378199658\r\n126331578514\r\n75803524018\r\n121746176498\r\n93956993869\r\n115923236377\r\n89729934658\r\n83906994537\r\n93719452879\r\n143131410029\r\n99779933990\r\n102138525699\r\n136119139467\r\n125563665301\r\n106309174226\r\n107836748673\r\n109819166859\r\n115189873666\r\n126509047748\r\n185622690877\r\n147177640814\r\n131430812548\r\n287761216576\r\n137624755508\r\n192931294088\r\n165533458676\r\n159710518555\r\n177626447416\r\n201793742542\r\n173636929195\r\n183449387537\r\n183686928527\r\n186045520236\r\n193499386869\r\n206089108216\r\n217655915532\r\n208447699925\r\n407882850758\r\n423745023748\r\n232818221974\r\n239267561221\r\n300145976943\r\n241698921414\r\n314880200085\r\n269055568056\r\n330627028351\r\n291141331103\r\n353209905424\r\n343159906092\r\n392134628452\r\n325243977231\r\n351263376611\r\n363671967652\r\n357086316732\r\n416505150501\r\n367136316064\r\n399588495085\r\n394493220161\r\n745756596772\r\n414536808141\r\n426103615457\r\n441265921899\r\n472085783195\r\n584858827506\r\n474517143388\r\n592477466645\r\n709373420246\r\n510754489470\r\n783641466565\r\n560196899159\r\n841653459452\r\n616385308334\r\n694423282703\r\n719737197392\r\n676507353842\r\n886622591336\r\n720758284384\r\n724222632796\r\n1071000574003\r\n810998370662\r\n1010962442963\r\n794081715246\r\n1208618523387\r\n1150639342145\r\n1001462821058\r\n867369537356\r\n915783065287\r\n946602926583\r\n985271632858\r\n1034714042547\r\n1176582207493\r\n1070951388629\r\n1127139797804\r\n1587106734748\r\n1812461191720\r\n2502889800035\r\n1292892662176\r\n1370930636545\r\n1396244551234\r\n1607380875720\r\n3537603842582\r\n1444980917180\r\n1795174021425\r\n1938370111359\r\n1661451252602\r\n1709864780533\r\n2086974377422\r\n1950497107834\r\n1813972463939\r\n1783152602643\r\n2105665431176\r\n1986734453916\r\n1931874559441\r\n2019985675405\r\n3108456766934\r\n2198091186433\r\n2788591050406\r\n2420032459980\r\n2689137213410\r\n3769887056559\r\n4136461297792\r\n2663823298721\r\n2767175187779\r\n3003625426954\r\n4056162539010\r\n3106432169782\r\n3228133519823\r\n3371316033135\r\n3733649710477\r\n4887228399843\r\n3493017383176\r\n3597125066582\r\n5109290858130\r\n3803138278048\r\n5917270733233\r\n4125651106581\r\n3951860234846\r\n4129965745874\r\n4218076861838\r\n4618123646413\r\n4861914485154\r\n5109169673390\r\n7773114156851\r\n6156840681897\r\n6840081880259\r\n5430998486500\r\n5667448725675\r\n6500824898256\r\n6110057596736\r\n6721150902999\r\n10235708703317\r\n7446210381661\r\n6968441099717\r\n7090142449758\r\n8743774752994\r\n7296155661224\r\n7400263344630\r\n8912307951438\r\n8665052763202\r\n8077511341427\r\n8081825980720\r\n9079991346992\r\n15069148633335\r\n10374917543735\r\n13510320941366\r\n9971084158544\r\n11219227270126\r\n14917593221686\r\n12271080366759\r\n11098447212175\r\n12168273623931\r\n11777506322411\r\n12610882494992\r\n12831208499735\r\n13689592002716\r\n14058583549475\r\n14264596760941\r\n14368704444347\r\n14386298110982\r\n14696419005854\r\n23369527578934\r\n20231471844365\r\n16159337322147\r\n24824390085349\r\n25915646275980\r\n26997180605974\r\n25678594565297\r\n22242164525303\r\n22802292658279\r\n22139357782475\r\n21069531370719\r\n22317674482301\r\n22875953534586\r\n25442090994727\r\n28961015766795\r\n25836089871886\r\n26042103083352\r\n26300474497708\r\n40284350720327\r\n28755002555329\r\n28323180310416\r\n35334128131660\r\n51203180292098\r\n36525655893457\r\n45044457183582\r\n45193628016887\r\n36390809166512\r\n42074983598127\r\n48153764354187\r\n43311695896022\r\n49176428032294\r\n43208889153194\r\n43387205853020\r\n43871824028998\r\n44457032264776\r\n73989854226073\r\n47759765477028\r\n48318044529313\r\n51278180866613\r\n54591092427215\r\n69044979025080\r\n52342577581060\r\n54623654808124\r\n57078182865745\r\n76082945787444\r\n92610796618963\r\n71724937298172\r\n72916465059969\r\n78465792764639\r\n79599698319706\r\n81584437183399\r\n79702505062534\r\n122092893092263\r\n86596095006214\r\n86520585049216\r\n87080713182192\r\n96799609845836\r\n87259029882018\r\n99080687072900"
    
    val listOfValues = input.split("\r\n").toList()
    println(findFirstNonSum(listOfValues)) // answer
}

fun findFirstNonSum(listOfValues: List<String>): Long {
    
    val listOfValsAsNums = getNumList(listOfValues)
    
    val preambleLength = 25
    var preambleStart = 0
    var preambleEnd = preambleLength - 1
    var preamble = listOfValsAsNums.slice(preambleStart..preambleEnd) 

    listOfValsAsNums.forEachIndexed { index, value ->
        
       if (index >= preambleLength) {
           var anyContain = false
           preamble.forEach {
               val numNeeded = value - it
               if (preamble.contains(numNeeded) && it != numNeeded) anyContain = true
           }
           
           if (anyContain == false) return value
            
           preambleStart++
           preambleEnd++
           preamble = listOfValsAsNums.slice(preambleStart..preambleEnd)
            
       }
       

    }

    return 0.toLong().also { println("i think something went wrong there bud")}
}

fun getNumList(listOfValues: List<String>): List<Long> {
    val listOfNums = mutableListOf<Long>()
    
    listOfValues.forEach {
        listOfNums.add(it.toLong())
    }
    
    return listOfNums
}